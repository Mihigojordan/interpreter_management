// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         String   @id @unique @default(uuid())
  adminName  String?
  adminEmail String?  @unique
  phone     String?
  password   String?
  profileImage  String?
  status       AdminStatus    @default(ACTIVE)
  google_id    String?  @unique
  is2FA   Boolean? @default(false)
  isLocked   Boolean? @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt


}

enum AdminStatus{
    ACTIVE
    INACTIVE
}



model InterpreterRequest {
  id            String   @id @default(uuid())
  fullName                String
  email                   String
  phone                   String
  preferredContactMethod   String
  languageFrom            String
  languageTo              String
  serviceType             String
  dateTime                DateTime
  location                String
  durationMinutes         Int
  interpreterType         String
  specialRequirements     String?
  reason                  String
  urgencyLevel            String
  additionalNotes         String?
  status                  String   @default("pending") // Supports 'pending', 'accepted', 'rejected'
  paymentStatus    PaymentStatus    @default(PENDING)
  amount    Int?
  interpreterId           String?  // Add this to link to Interpreter
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  interpreter             Interpreter? @relation(fields: [interpreterId], references: [id]) // Optional relation
    message  Message[]
}





model Interpreter {
  id        String   @id @default(uuid())
  name      String
  email     String    @unique
  phone     String    @unique


  type      Type    @default(VOLUNTEER)

  // files
  photoUrl  String?
  supportingFile String?
  cvUrl String?

  //array
  languages Json

  country   String
  password  String?
  status    Status    @default(PENDING)
  paymentStatus    PaymentStatus    @default(PENDING)
  amount    Int?
  reason    String?
  isOnline  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  message  Message[]
  InterpreterRequest InterpreterRequest[]
}

enum Type{
  PRO
  VOLUNTEER
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
enum PaymentStatus {
  PENDING
  PAID
}



model Message {
  id            String   @id @default(uuid())
  content       String
  interpreterId String
  requestId     String
  createdAt     DateTime @default(now())

  // Relations
  interpreter   Interpreter @relation(fields: [interpreterId], references: [id])
  request       InterpreterRequest      @relation(fields: [requestId], references: [id])
}